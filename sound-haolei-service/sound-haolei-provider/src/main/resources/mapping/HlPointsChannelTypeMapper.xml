<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sound.haolei.provider.dao.HlPointsChannelTypeMapper">
  <resultMap id="BaseResultMap" type="com.sound.haolei.model.HlPointsChannelType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="channel" jdbcType="VARCHAR" property="channel" />
    <result column="points_type" jdbcType="TINYINT" property="pointsType" />
    <result column="points" jdbcType="INTEGER" property="points" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="cuser" jdbcType="INTEGER" property="cuser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, channel, points_type, points, description, ctime, cuser
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hl_points_channel_type${substationNameSpell}
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hl_points_channel_type${substationNameSpell}
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sound.haolei.model.HlPointsChannelType">
    insert into hl_points_channel_type${substationNameSpell} (id, channel, points_type, 
      points, description, ctime, 
      cuser)
    values (#{id,jdbcType=INTEGER}, #{channel,jdbcType=VARCHAR}, #{pointsType,jdbcType=TINYINT}, 
      #{points,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{ctime,jdbcType=TIMESTAMP}, 
      #{cuser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sound.haolei.model.HlPointsChannelType">
    insert into hl_points_channel_type${substationNameSpell}
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="pointsType != null">
        points_type,
      </if>
      <if test="points != null">
        points,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="cuser != null">
        cuser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="pointsType != null">
        #{pointsType,jdbcType=TINYINT},
      </if>
      <if test="points != null">
        #{points,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="cuser != null">
        #{cuser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sound.haolei.model.HlPointsChannelType">
    update hl_points_channel_type${substationNameSpell}
    <set>
      <if test="channel != null">
        channel = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="pointsType != null">
        points_type = #{pointsType,jdbcType=TINYINT},
      </if>
      <if test="points != null">
        points = #{points,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="cuser != null">
        cuser = #{cuser,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sound.haolei.model.HlPointsChannelType">
    update hl_points_channel_type${substationNameSpell}
    set channel = #{channel,jdbcType=VARCHAR},
      points_type = #{pointsType,jdbcType=TINYINT},
      points = #{points,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      cuser = #{cuser,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  <!-- ************************************************** 自定义 ************************************************ -->
  <select id="selectByChannel" resultMap="BaseResultMap">
  	SELECT
		<include refid="Base_Column_List" />
	FROM
		hl_points_channel_type${substationNameSpell}
	WHERE
		channel = #{channel};
  </select>
  
  <!-- @Description  根据channel更新point字段 @author sushile -->
    <update id="updateByChannel" parameterType="com.sound.haolei.model.HlPointsChannelType">
	    update hl_points_channel_type${substationNameSpell}
	    <set>
	      <if test="points != null">
	        points = #{points,jdbcType=INTEGER},
	      </if>
	    </set>
	    where channel = #{channel,jdbcType=INTEGER}
  </update>

  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hl_points_channel_type${substationNameSpell}
  </select>

    <!--@Description　分页查询加成上回收@author sushile-->
  <select id="searchByPage" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
        from hl_points_channel_type${substationNameSpell}
  </select>


    <update id="updateSupportPhp" parameterType="com.sound.haolei.model.HlPointsChannelType">
        update hl_points_channel_type${substationNameSpell}
        set
          points = #{points,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateIntelligenceRecyclePrice" parameterType="java.lang.String">
        update hl_points_channel_type${substationNameSpell}
        set
          points = #{points,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <select id="selectSubAllspellAndId" resultType="java.util.Map" parameterType="java.lang.String">
		select hsb.id, hsb.spell from hl_substation hsb where hsb.wechat_official_accounts_id = #{publicnumberid,jdbcType=VARCHAR}
	</select>

</mapper>