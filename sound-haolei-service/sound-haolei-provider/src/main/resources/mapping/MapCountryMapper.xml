<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sound.haolei.provider.dao.MapCountryMapper" >
  <resultMap id="BaseResultMap" type="com.sound.haolei.model.MapCountry" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="letter" property="letter" jdbcType="VARCHAR" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, letter, cid, ctime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from map_county
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from map_county
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sound.haolei.model.MapCountry" >
    insert into map_county (id, name, letter, 
      cid, ctime)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{letter,jdbcType=VARCHAR}, 
      #{cid,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sound.haolei.model.MapCountry" >
    insert into map_county
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="letter != null" >
        letter,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="letter != null" >
        #{letter,jdbcType=VARCHAR},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sound.haolei.model.MapCountry" >
    update map_county
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="letter != null" >
        letter = #{letter,jdbcType=VARCHAR},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sound.haolei.model.MapCountry" >
    update map_county
    set name = #{name,jdbcType=VARCHAR},
      letter = #{letter,jdbcType=VARCHAR},
      cid = #{cid,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectByCondition" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from map_county
    where 1=1
    <include refid="where"/>
    ORDER BY id asc
  </select>
  
  
   <!-- %%%%%%%%%%%%%%%%%%%%%% 自定义 %%%%%%%%%%%%%%%%%%%%%%%%% -->
   <!-- 批量删除县区信息 -->
  <delete id="batchDelete" parameterType="java.util.List">
	delete from map_county where id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">     
       ${item}     
    </foreach> 
  </delete>
  
  <!--根据县区名称模糊查询县区信息  -->
  <select id="selectByLikeName" parameterType="java.lang.String" resultMap="BaseResultMap">
  		select 
		<include refid="Base_Column_List" />
		from map_county where name like CONCAT(CONCAT('%', #{name,jdbcType=VARCHAR}), '%') limit 1
  </select>
   
   
   <sql id="where">
  	<if test="id != null and id != -1">
  		and id = #{id}
  	</if>
  	<if test="name != null and name != ''">
  		and name like CONCAT(CONCAT('%', #{name,jdbcType=VARCHAR}), '%')
  	</if>
  	<if test="cid != null and cid != -1">
  		and cid = #{cid}
  	</if>
  </sql>
  
  <select id="selectAll" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from map_county
  </select>
  
</mapper>